VSCode setup:
désactiver la complétion bugguée dans les paramètres: accept suggestion on commit character


Initial project setup:

Installer 
    .Net SDK
    NodeJS
    GIT

afficher la liste des templates:
dotnet new -l 

----------
Create the projects:

dotnet new sln
dotnet new webapi -n API
dotnet new classlib -n Application
dotnet new classlib -n Domain
dotnet new classlib -n Persistance
dotnet sln add .\API\
dotnet sln add .\Application\
dotnet sln add .\Persistance\
dotnet sln add .\Domain\

cd API
dotnet add reference ..\Application\
cd ..
cd Application
dotnet add reference ..\Persistance\
dotnet add reference ..\Domain\
cd ..
cd Persistance
dotnet add reference ..\Domain\

cd ..
dotnet add gitignore

dotnet tool install --global dotnet-ef
cd API
dotnet add package Microsoft.EntityFrameworkCore.Design --version 6.0.10
----------

Si il y a un problème de dépendences (p.ex. EntityFramework pas dispo dans le projet API)
il faut lancer cette commande depuis la racine (dossier de la solution):
dotnet restore

La création de migrations n'est pas possible sur un chemin réseau. Il faut placer le projet à la racine du disque C idéalement.
----------

Migrations:
Les migrations sont executées automatiquement via API\program.cs 

Pour créer une migration, lancer cette commande depuis la racine:
dotnet ef migrations add initialCreate -p Persistance -s API
----------

On lance l'app depuis le dossier API avec la commande:
dotnet watch run

Si omnisharp bug, on fait ctrl+shift+P : omnisharp:restart omnisharp




[React]
npx create-react-app client --use-npm --template typescript

